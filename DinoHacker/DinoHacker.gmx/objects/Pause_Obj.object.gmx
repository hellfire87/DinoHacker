<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pausable = false;
paused = false;
visible = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!paused &amp;&amp; !instance_exists(hackingObject)) {
    if (keyboard_check_pressed(vk_escape)) {
        paused = true;
        visible = true;
        x = view_xview[0]+view_wview[0]/2;
        y = view_yview[0]+view_hview[0]/2;
        with (all) {
            if (pausable) {
                paused = true;
            
                prev_image_speed = image_speed;
                prev_vspeed = vspeed;
                prev_hspeed = hspeed;
                prev_gravity = gravity;
                prev_path_speed = path_speed;
                prev_timeline_speed = timeline_speed;
                
                image_speed = 0;
                vspeed = 0;
                hspeed = 0;
                gravity = 0;
                path_speed = 0;
                timeline_speed = 0;
            }
        }
    }
} else if (keyboard_check_pressed(vk_escape) &amp;&amp; !instance_exists(hackingObject)) {
    paused = false;
    visible = false;
    with (all) {
        if (pausable) {
            paused = false;
        
            image_speed = prev_image_speed;
            vspeed = prev_vspeed;
            hspeed = prev_hspeed;
            gravity = prev_gravity;
            path_speed = prev_path_speed;
            timeline_speed = prev_timeline_speed;
        }
    }
}

if (paused) {
    with (all) {
        if (pausable) {
            if (alarm[0] &gt; 0) alarm[0] += 1;
            if (alarm[1] &gt; 0) alarm[1] += 1;
            if (alarm[2] &gt; 0) alarm[2] += 1;
            if (alarm[3] &gt; 0) alarm[3] += 1;
            if (alarm[4] &gt; 0) alarm[4] += 1;
            if (alarm[5] &gt; 0) alarm[5] += 1;
            if (alarm[6] &gt; 0) alarm[6] += 1;
            if (alarm[7] &gt; 0) alarm[7] += 1;
            if (alarm[8] &gt; 0) alarm[8] += 1;
            if (alarm[9] &gt; 0) alarm[9] += 1;
            if (alarm[10] &gt; 0) alarm[10] += 1;
            if (alarm[11] &gt; 0) alarm[11] += 1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
